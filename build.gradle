group 'com.mapotempo.fleet'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = 1.7

repositories {
    mavenCentral()
}

repositories {
    jcenter()
    maven {
        url "http://files.couchbase.com/maven2/"
    }
}
repositories { jcenter() }

dependencies {
    compile 'com.couchbase.lite:couchbase-lite-java-core:1.4.0'
    testCompile 'com.couchbase.lite:couchbase-lite-java:1.4.0'
    testCompile 'com.couchbase.lite:couchbase-lite-java-sqlcipher:+'
    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.0")
    testCompile("org.opentest4j:opentest4j:1.0.0")
    testCompile("org.junit.platform:junit-platform-commons:1.0.0")
    testCompile "org.mockito:mockito-core:2.+"
}

sourceSets {
    main {
        java.srcDirs = [
                'src/main',
        ]
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

FileTree docFilesTree = fileTree(dir: 'src/main/doc-files')

task copyJavaDocSupportFiles(type: Copy) {
    from docFilesTree
    into 'build/docs/javadoc/doc-files/'
}

task generateApiJavadocs(name: 'documentation', type: Javadoc, dependsOn: ['copyJavaDocSupportFiles']) {
    source = sourceSets.main.allJava
    exclude 'com/mapotempo/fleet/core'
    exclude 'com/mapotempo/fleet/utils'
    options.overview('src/main/overview.html')
    failOnError true
}